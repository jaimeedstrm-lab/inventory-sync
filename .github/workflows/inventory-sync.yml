name: Inventory Sync

on:
  schedule:
    # Run every 6 hours
    - cron: '0 */6 * * *'
  workflow_dispatch:  # Allows manual triggering

jobs:
  sync-oase:
    name: Sync Oase Outdoors
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        pip install -r requirements.txt

    - name: Prepare configuration files
      env:
        SUPPLIERS_JSON: ${{ secrets.SUPPLIERS_JSON }}
        SHOPIFY_JSON: ${{ secrets.SHOPIFY_JSON }}
      run: |
        mkdir -p config
        if [ -n "$SUPPLIERS_JSON" ]; then
          printf '%s' "$SUPPLIERS_JSON" > config/suppliers.json
        fi
        if [ -n "$SHOPIFY_JSON" ]; then
          printf '%s' "$SHOPIFY_JSON" > config/shopify.json
        fi

    - name: Run Oase Outdoors sync
      env:
        SHOPIFY_ACCESS_TOKEN: ${{ secrets.SHOPIFY_ACCESS_TOKEN }}
        SHOPIFY_SHOP_URL: ${{ secrets.SHOPIFY_SHOP_URL }}
        OASE_USERNAME: ${{ secrets.OASE_USERNAME }}
        OASE_PASSWORD: ${{ secrets.OASE_PASSWORD }}
        OASE_OUTDOORS_USERNAME: ${{ secrets.OASE_USERNAME }}
        OASE_OUTDOORS_PASSWORD: ${{ secrets.OASE_PASSWORD }}
      run: python3 main.py --supplier oase_outdoors

  sync-order-nordic:
    name: Sync Order Nordic
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        playwright install chromium
        playwright install-deps chromium

    - name: Prepare configuration files
      env:
        SUPPLIERS_JSON: ${{ secrets.SUPPLIERS_JSON }}
        SHOPIFY_JSON: ${{ secrets.SHOPIFY_JSON }}
      run: |
        mkdir -p config
        if [ -n "$SUPPLIERS_JSON" ]; then
          printf '%s' "$SUPPLIERS_JSON" > config/suppliers.json
        fi
        if [ -n "$SHOPIFY_JSON" ]; then
          printf '%s' "$SHOPIFY_JSON" > config/shopify.json
        fi

    - name: Run Order Nordic sync
      env:
        SHOPIFY_ACCESS_TOKEN: ${{ secrets.SHOPIFY_ACCESS_TOKEN }}
        SHOPIFY_SHOP_URL: ${{ secrets.SHOPIFY_SHOP_URL }}
        ORDER_NORDIC_USERNAME: ${{ secrets.ORDER_NORDIC_USERNAME }}
        ORDER_NORDIC_PASSWORD: ${{ secrets.ORDER_NORDIC_PASSWORD }}
      run: python3 main.py --supplier order_nordic

  sync-response-nordic:
    name: Sync Response Nordic
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        playwright install chromium
        playwright install-deps chromium

    - name: Prepare configuration files
      env:
        SUPPLIERS_JSON: ${{ secrets.SUPPLIERS_JSON }}
        SHOPIFY_JSON: ${{ secrets.SHOPIFY_JSON }}
      run: |
        mkdir -p config
        if [ -n "$SUPPLIERS_JSON" ]; then
          printf '%s' "$SUPPLIERS_JSON" > config/suppliers.json
        fi
        if [ -n "$SHOPIFY_JSON" ]; then
          printf '%s' "$SHOPIFY_JSON" > config/shopify.json
        fi

    - name: Run Response Nordic sync
      env:
        SHOPIFY_ACCESS_TOKEN: ${{ secrets.SHOPIFY_ACCESS_TOKEN }}
        SHOPIFY_SHOP_URL: ${{ secrets.SHOPIFY_SHOP_URL }}
        RESPONSE_NORDIC_USERNAME: ${{ secrets.RESPONSE_NORDIC_USERNAME }}
        RESPONSE_NORDIC_PASSWORD: ${{ secrets.RESPONSE_NORDIC_PASSWORD }}
      run: python3 main.py --supplier response_nordic
